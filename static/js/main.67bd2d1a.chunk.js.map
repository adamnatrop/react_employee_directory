{"version":3,"sources":["components/Header/index.js","components/SearchForm/index.js","utils/API.js","components/SearchResults/index.js","components/Table/index.js","components/Search/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchForm","props","htmlFor","value","search","onChange","handleInputChange","name","type","placeholder","axios","get","SearchResults","results","map","result","src","picture","thumbnail","alt","gender","first","last","phone","email","moment","dob","date","format","login","sha256","Table","scope","onClick","sortBy","searchResults","Search","state","sortResults","order","error","event","a","setState","target","sortResultsName","sorted","sort","b","toLowerCase","API","then","res","data","catch","err","console","log","this","length","filter","includes","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAeiBA,MAZjB,WACI,OACE,qBAAKC,UAAU,kBAAf,SACE,wBAAQA,UAAU,6BAAlB,SACI,oBAAIA,UAAU,SAAd,qC,8DCmBGC,MArBf,SAAoBC,GAGhB,OACI,sBAAMF,UAAU,SAAhB,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOG,QAAQ,aACf,uBACIC,MAAOF,EAAMG,OACbC,SAAUJ,EAAMK,kBAChBC,KAAK,WACLC,KAAK,OACLT,UAAU,4BACVU,YAAY,mC,iBCfjB,EACM,WACb,OAAOC,IAAMC,IAAI,0C,+BCkBVC,MAjBf,SAAuBX,GAEnB,OACI,gCACKA,EAAMY,QAAQC,KAAI,SAAAC,GAAM,OACrB,+BACI,6BAAI,qBAAKC,IAAKD,EAAOE,QAAQC,UAAWC,IAAKJ,EAAOK,WACpD,+BAAKL,EAAOR,KAAKc,MAAjB,IAAyBN,EAAOR,KAAKe,QACrC,6BAAKP,EAAOQ,QACZ,yCAAYR,EAAOS,SACnB,6BAAKC,IAAOV,EAAOW,IAAIC,MAAMC,OAAO,SAL/Bb,EAAOc,MAAMC,cCqBvBC,MA1Bf,SAAe9B,GACX,OACI,qBAAKF,UAAU,YAAf,SACI,wBAAOA,UAAU,kCAAjB,UACI,gCACI,+BACA,oBAAIiC,MAAM,MAAV,mBAEA,qBAAIA,MAAM,MAAMjC,UAAU,aAAakC,QAAS,kBAAMhC,EAAMiC,UAA5D,kBAA4E,mBAAGnC,UAAU,2BACzF,oBAAIiC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAID,cAAC,EAAD,CACKnB,QAASZ,EAAMkC,sBCsExBC,E,4MArFXC,MAAQ,CACJjC,OAAQ,GACRS,QAAS,GACTyB,YAAa,GACbC,MAAO,GACPC,MAAO,I,EAgBXlC,kB,uCAAoB,WAAMmC,GAAN,SAAAC,EAAA,sEACV,EAAKC,SAAS,CAAEvC,OAAQqC,EAAMG,OAAOzC,QAD3B,uBAEV,EAAK0C,gBAAgB,EAAKR,MAAMjC,QAFtB,2C,wDAiBpB8B,OAAS,WAEL,GAAyB,KAArB,EAAKG,MAAME,OAAqC,eAArB,EAAKF,MAAME,MAAwB,CAC9D,EAAKI,SAAS,CAAEJ,MAAO,cAEvB,IAAMO,EAAS,EAAKT,MAAMxB,QAAQkC,MAAK,SAASL,EAAGM,GAG/C,OAFQN,EAAEnC,KAAKe,KAAK2B,cACZD,EAAEzC,KAAKe,KAAK2B,eACC,EAEd,KAEf,EAAKN,SAAS,CAACL,YAAaQ,SAEzB,GAAyB,cAArB,EAAKT,MAAME,MAAsB,CACxC,EAAKI,SAAS,CAAEJ,MAAO,eAEvB,IAAMO,EAAS,EAAKT,MAAMxB,QAAQkC,MAAK,SAASL,EAAGM,GAI/C,OAHQN,EAAEnC,KAAKe,KAAK2B,cACZD,EAAEzC,KAAKe,KAAK2B,eAEC,EACd,KAEX,EAAKN,SAAS,CAACL,YAAaQ,M,uDArDhC,WAAoB,IAAD,OACfI,IACKC,MAAK,SAAAC,GAEF,EAAKT,SAAS,CAAC9B,QAASuC,EAAIC,KAAKxC,UACjC,EAAKgC,gBAAgB,EAAKR,MAAMjC,WAEnCkD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,6BAYlC,SAAgBnD,GACZ,GAAIsD,KAAKrB,MAAMjC,OAAOuD,OAEf,CACH,IAAMb,EAASY,KAAKrB,MAAMxB,QAAQ+C,QAAO,SAAA/C,GAAO,OAAIA,EAAQN,KAAKc,MAAM4B,cAAcY,SAASzD,IAAWS,EAAQN,KAAKe,KAAK2B,cAAcY,SAASzD,MAClJsD,KAAKf,SAAS,CAACL,YAAaQ,SAH5BY,KAAKf,SAAS,CAACL,YAAaoB,KAAKrB,MAAMxB,Y,oBAqC/C,WACI,OACI,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,cAAC,EAAD,CACIO,kBAAmBoD,KAAKpD,oBAE5B,cAAC,EAAD,CACI6B,cAAeuB,KAAKrB,MAAMC,YAC1BJ,OAAQwB,KAAKxB,kB,GA7EhB4B,aCWNC,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67bd2d1a.chunk.js","sourcesContent":["import './style.css';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <header className=\"row justify-content-center\">\r\n            <h1 className=\"col-12\">Employee Directory</h1>\r\n        </header>\r\n      </div>\r\n       \r\n      \r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\n// Input form for sorting by name\r\nfunction SearchForm(props){\r\n\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"employee\"></label>\r\n                <input\r\n                    value={props.search}\r\n                    onChange={props.handleInputChange}\r\n                    name=\"employee\"\r\n                    type=\"text\"\r\n                    className=\"form-control search-width\"\r\n                    placeholder=\"Type in an Employee Name\"\r\n                />\r\n                \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployeeData: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=50\")\r\n    }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\nimport moment from \"moment\"\r\n\r\n\r\n// Uses results from state to display each employee in a row of the directory table\r\nfunction SearchResults(props) {\r\n\r\n    return (\r\n        <tbody>\r\n            {props.results.map(result => (\r\n                <tr key={result.login.sha256}>\r\n                    <td><img src={result.picture.thumbnail} alt={result.gender}/></td>\r\n                    <td>{result.name.first} {result.name.last}</td>\r\n                    <td>{result.phone}</td>\r\n                    <td>mailto:{result.email}</td>\r\n                    <td>{moment(result.dob.date).format(\"L\")}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default SearchResults;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport SearchResults from \"../SearchResults\"\r\n\r\n\r\n// Creates Table to display Employees\r\nfunction Table(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    {/* creates link on name field to sort alphabetically */}\r\n                    <th scope=\"col\" className=\"sortByName\" onClick={() => props.sortBy()} >Name <i className=\"fas fa-arrows-alt-v\"></i></th>\r\n                    <th scope=\"col\">Phone</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">DOB</th>\r\n                    </tr>\r\n                </thead>\r\n                    {/* Use SearchResults component to map over array to display all employees returned from API */}\r\n                   <SearchResults \r\n                        results={props.searchResults}\r\n                   />\r\n                    \r\n                \r\n            </table>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\nimport SearchForm from \"../SearchForm\";\r\nimport API from \"../../utils/API\";\r\nimport Table from \"../Table\";\r\n\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        search: \"\",\r\n        results: [],\r\n        sortResults: [],\r\n        order: \"\",\r\n        error: \"\"\r\n    };\r\n\r\n    // when component loads sets state for results returned by API\r\n    componentDidMount(){\r\n        API.getEmployeeData()\r\n            .then(res => {\r\n                \r\n                this.setState({results: res.data.results})\r\n                this.sortResultsName(this.state.search)\r\n            })\r\n            .catch(err => console.log(err));\r\n            \r\n    }\r\n\r\n\r\n    handleInputChange = async event => {\r\n        await this.setState({ search: event.target.value });\r\n        await this.sortResultsName(this.state.search)\r\n            \r\n      };\r\n\r\n      // filters results based on letters typed into search bar\r\n    sortResultsName(search) {\r\n        if(!this.state.search.length) {\r\n            this.setState({sortResults: this.state.results})\r\n        } else {\r\n            const sorted = this.state.results.filter(results => results.name.first.toLowerCase().includes(search) || results.name.last.toLowerCase().includes(search))\r\n            this.setState({sortResults: sorted})\r\n            \r\n        }\r\n    }\r\n    // Sort column alphabetically by Last Name\r\n    sortBy = () => {\r\n        \r\n        if (this.state.order === \"\" || this.state.order === \"descending\") {\r\n            this.setState({ order: \"ascending\"})\r\n    \r\n            const sorted = this.state.results.sort(function(a, b){\r\n                let x = a.name.last.toLowerCase();\r\n                let y = b.name.last.toLowerCase();\r\n                if (x < y) { return -1; };\r\n                \r\n                return 0;\r\n        })\r\n        this.setState({sortResults: sorted});\r\n\r\n    } else if (this.state.order === \"ascending\"){\r\n        this.setState({ order: \"descending\"})\r\n        \r\n        const sorted = this.state.results.sort(function(a, b){\r\n            let x = a.name.last.toLowerCase();\r\n            let y = b.name.last.toLowerCase();\r\n            \r\n            if (x > y) { return -1; };\r\n            return 0;\r\n        })\r\n        this.setState({sortResults: sorted});\r\n\r\n    }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <SearchForm\r\n                        handleInputChange={this.handleInputChange}\r\n                    />\r\n                    <Table\r\n                        searchResults={this.state.sortResults}\r\n                        sortBy={this.sortBy}    \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import Header from \"./components/Header/index\";\nimport Search from \"./components/Search\";\n\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Search/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}